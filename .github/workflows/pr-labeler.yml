name: Label PRs Based on Commit Type

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

permissions:
  pull-requests: write
  contents: read

jobs:
  label-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Label PR based on commit types
        uses: actions/github-script@v8
        with:
          script: |
            // Get PR commits
            const { data: commits } = await github.rest.pulls.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            // Extract commit types from conventional commits
            const commitTypes = new Set();
            for (const commit of commits) {
              const message = commit.commit.message.split('\n')[0];
              const match = message.match(/^(\w+)(\(.+?\))?:/);
              if (match) {
                commitTypes.add(match[1]);
              }
            }

            // Map commit types to labels
            const typeToLabel = {
              'feat': 'Feature',
              'fix': 'bug',
              'chore': 'Chore',
              'docs': 'documentation',
              'refactor': 'Refactor',
              'test': 'testing',
              'perf': 'performance',
              'style': 'UX'
            };

            const labelsToAdd = [];
            for (const type of commitTypes) {
              const label = typeToLabel[type];
              if (label) {
                labelsToAdd.push(label);
              }
            }

            // Apply labels if we found any
            if (labelsToAdd.length > 0) {
              await github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: labelsToAdd
              });
              console.log(`Applied labels: ${labelsToAdd.join(', ')}`);
            }

      - name: Verify labels exist (silent check)
        uses: actions/github-script@v8
        with:
          script: |
            // Check that the labels we're trying to use actually exist
            const expectedLabels = ['Feature', 'bug', 'Chore', 'documentation', 'Refactor', 'testing', 'performance', 'UX'];

            try {
              const { data: repoLabels } = await github.rest.issues.listLabelsForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                per_page: 100
              });

              const existingLabelNames = repoLabels.map(label => label.name);
              const missingLabels = expectedLabels.filter(label => !existingLabelNames.includes(label));

              if (missingLabels.length > 0) {
                console.log('⚠️ Warning: These labels are used in workflow but do not exist:', missingLabels.join(', '));
                console.log('Create them at: https://github.com/' + context.repo.owner + '/' + context.repo.repo + '/labels');
                // Don't comment - just log for debugging
              } else {
                console.log('✅ All expected labels exist');
              }
            } catch (error) {
              console.log('Label check skipped:', error.message);
            }
