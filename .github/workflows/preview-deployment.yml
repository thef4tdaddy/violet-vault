name: Preview Deployment

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  deployments: write
  pull-requests: write

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Lint
        run: npm run lint

      - name: Build for staging
        run: npm run build:staging
        env:
          VITE_APP_ENV: "staging"

      - name: Create deployment
        id: deployment
        uses: actions/github-script@v7
        with:
          script: |
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'preview',
              description: `Preview deployment for PR #${context.payload.pull_request.number}`,
              auto_merge: false,
              required_contexts: []
            });

            return deployment.data.id;

      - name: Upload preview build to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: preview-build-${{ github.event.pull_request.number }}
          path: dist/
          retention-days: 7

      - name: Comment on PR with preview info
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const artifactName = `preview-build-${prNumber}`;

            const comment = `ðŸš€ **Preview Build Ready!**

            This PR has been built and is ready for preview testing.

            ðŸ“¦ **Artifact**: \`${artifactName}\`
            ðŸ”— **Download**: [Preview Build Artifact](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})

            ### Testing Instructions:
            1. Download the artifact from the link above
            2. Extract the contents to your local web server
            3. Test the changes thoroughly
            4. Report any issues in this PR

            ### Build Info:
            - **Commit**: ${context.sha.substring(0, 7)}
            - **Environment**: Staging
            - **Build Time**: ${new Date().toISOString()}

            ---
            *This preview will be available for 7 days*`;

            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Update deployment status - success
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: ${{ steps.deployment.outputs.result }},
              state: 'success',
              description: 'Preview deployment completed successfully',
              environment_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            });

      - name: Update deployment status - failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: ${{ steps.deployment.outputs.result }},
              state: 'failure',
              description: 'Preview deployment failed'
            });
