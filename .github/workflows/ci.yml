name: CI

on:
  # Run hourly for automated formatting and linting
  schedule:
    - cron: '0 * * * *' # Every hour at minute 0
  
  # Keep PR checks for essential validation (without auto-formatting)
  pull_request:
    branches: [main]
  
  # Manual trigger option
  workflow_dispatch:

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Auto-fix formatting
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        run: npm run format

      - name: Check for formatting changes
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "Code was auto-formatted. Committing changes..."
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add .
            git commit -m "style: auto-fix prettier formatting"
            
            # Push to main branch for scheduled runs
            git push origin HEAD:main
          else
            echo "No formatting changes needed"
          fi

      - name: Lint
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        run: npm run lint

      - name: Test with Coverage
        run: npm run test:ci

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Build
        run: npm run build

      - name: Check for build output
        run: |
          if [ ! -d "dist" ]; then
            echo "Build failed - no dist directory found"
            exit 1
          fi
          if [ ! -f "dist/index.html" ]; then
            echo "Build failed - no index.html found"
            exit 1
          fi
          echo "Build completed successfully"
