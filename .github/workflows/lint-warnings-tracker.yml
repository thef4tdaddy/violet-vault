name: Lint Warnings Tracker

on:
  # Hourly tracking for active development monitoring
  schedule:
    - cron: "0 * * * *" # Every hour

  # Keep PR checks for validation
  pull_request:
    branches: [main, develop]
    paths:
      - "src/**"
      - "scripts/**"
      - "*.js"
      - "*.jsx"
      - "*.ts"
      - "*.tsx"

  # Manual trigger option
  workflow_dispatch:

jobs:
  lint-warnings:
    runs-on: ubuntu-latest
    name: Track Lint Warnings

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint and capture warnings
        id: lint
        run: |
          # Run ESLint and capture both stdout and stderr
          npm run lint --silent > eslint-output.txt 2>&1 || true

          # Parse the output to extract warnings
          node scripts/parse-eslint-warnings.js eslint-output.txt > new-warnings.json

          # Get current warning count from existing file
          CURRENT_COUNT=$(if [ -f "./.github/data/lint-warnings.json" ]; then 
            cat .github/data/lint-warnings.json | jq -r '.currentStatus.totalWarnings // 0'
          else 
            echo 0
          fi)

          # Get new warning count
          NEW_COUNT=$(if [ -f "./new-warnings.json" ]; then 
            cat new-warnings.json | jq -r '.currentStatus.totalWarnings // 0'
          else 
            echo 0
          fi)

          echo "current_count=$CURRENT_COUNT" >> $GITHUB_OUTPUT
          echo "new_count=$NEW_COUNT" >> $GITHUB_OUTPUT

          # Calculate percentage increase
          PERCENTAGE_INCREASE=$(node -e "
            const current = $CURRENT_COUNT;
            const newCount = $NEW_COUNT;
            if (current === 0) {
              console.log(newCount > 0 ? 100 : 0);
            } else {
              const increase = ((newCount - current) / current) * 100;
              console.log(Math.round(increase * 100) / 100);
            }
          ")

          echo "percentage_increase=$PERCENTAGE_INCREASE" >> $GITHUB_OUTPUT

      - name: Check warning increase threshold
        id: check_threshold
        run: |
          PERCENTAGE_INCREASE="${{ steps.lint.outputs.percentage_increase }}"
          CURRENT_COUNT="${{ steps.lint.outputs.current_count }}"
          NEW_COUNT="${{ steps.lint.outputs.new_count }}"

          echo "üìä **Lint Warning Analysis**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Previous warnings:** $CURRENT_COUNT" >> $GITHUB_STEP_SUMMARY
          echo "- **Current warnings:** $NEW_COUNT" >> $GITHUB_STEP_SUMMARY
          echo "- **Change:** $PERCENTAGE_INCREASE%" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Check if increase is over 20%
          if (( $(echo "$PERCENTAGE_INCREASE > 20" | bc -l) )); then
            echo "‚ùå **FAILED:** Warning count increased by $PERCENTAGE_INCREASE% (over 20% threshold)" >> $GITHUB_STEP_SUMMARY
            echo "threshold_exceeded=true" >> $GITHUB_OUTPUT
            # Don't exit - continue with issue updates (graduated approach allows higher warning counts)
          elif (( $(echo "$PERCENTAGE_INCREASE > 0" | bc -l) )); then
            echo "‚ö†Ô∏è **WARNING:** Warning count increased by $PERCENTAGE_INCREASE% (within 20% threshold)" >> $GITHUB_STEP_SUMMARY
            echo "threshold_exceeded=false" >> $GITHUB_OUTPUT
          elif (( $(echo "$PERCENTAGE_INCREASE < 0" | bc -l) )); then
            echo "‚úÖ **IMPROVED:** Warning count decreased by $(echo "$PERCENTAGE_INCREASE * -1" | bc -l)%" >> $GITHUB_STEP_SUMMARY
            echo "threshold_exceeded=false" >> $GITHUB_OUTPUT
          else
            echo "‚úÖ **STABLE:** No change in warning count" >> $GITHUB_STEP_SUMMARY
            echo "threshold_exceeded=false" >> $GITHUB_OUTPUT
          fi

      - name: Update lint-warnings.json on main/develop push
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
        run: |
          # Replace the existing lint-warnings.json with the new data
          cp new-warnings.json .github/data/lint-warnings.json

          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Check if there are changes
          if git diff --quiet .github/data/lint-warnings.json; then
            echo "No changes to lint-warnings.json"
          else
            git add .github/data/lint-warnings.json
            git commit -m "chore: update lint warnings tracking data [skip ci]
            
            Updated by GitHub Action after lint analysis
            
            ü§ñ Generated with GitHub Actions"
            git push
          fi

      - name: Comment on PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const currentCount = '${{ steps.lint.outputs.current_count }}';
            const newCount = '${{ steps.lint.outputs.new_count }}';
            const percentageIncrease = '${{ steps.lint.outputs.percentage_increase }}';
            const thresholdExceeded = '${{ steps.check_threshold.outputs.threshold_exceeded }}' === 'true';

            let emoji = '‚úÖ';
            let status = 'PASSED';
            let color = 'green';

            if (thresholdExceeded) {
              emoji = '‚ùå';
              status = 'FAILED';
              color = 'red';
            } else if (parseFloat(percentageIncrease) > 0) {
              emoji = '‚ö†Ô∏è';
              status = 'WARNING';
              color = 'orange';
            }

            const body = `## ${emoji} Lint Warning Analysis - ${status}

            | Metric | Value |
            |--------|-------|
            | **Previous Warnings** | ${currentCount} |
            | **Current Warnings** | ${newCount} |
            | **Change** | ${percentageIncrease}% |
            | **Threshold** | 20% increase |

            ${thresholdExceeded 
              ? 'üö® **This PR exceeds the 20% warning increase threshold and will be blocked.**' 
              : '‚úÖ **This PR is within the acceptable warning increase threshold.**'
            }

            <details>
            <summary>View detailed warning breakdown</summary>

            The full warning analysis is available in the workflow summary.
            You can also check the \`.github/data/lint-warnings.json\` file for detailed breakdown by category and file.

            </details>`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

      - name: Check if should run based on branch and schedule
        id: should_run
        run: |
          # For scheduled runs, check branch-specific frequency
          if [ "${{ github.event_name }}" == "schedule" ]; then
            CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
            DAY_OF_WEEK=$(date +%u) # 1=Monday, 7=Sunday
            
            if [ "$CURRENT_BRANCH" == "main" ]; then
              # Main branch: only run on Sundays (weekly)
              if [ "$DAY_OF_WEEK" == "7" ]; then
                echo "should_run=true" >> $GITHUB_OUTPUT
                echo "üìÖ Running weekly check for main branch"
              else
                echo "should_run=false" >> $GITHUB_OUTPUT
                echo "‚è≠Ô∏è Skipping daily check for main branch (weekly only)"
              fi
            else
              # Develop and other branches: run daily
              echo "should_run=true" >> $GITHUB_OUTPUT
              echo "üìÖ Running daily check for $CURRENT_BRANCH branch"
            fi
          else
            # Always run for push events and manual triggers
            echo "should_run=true" >> $GITHUB_OUTPUT
          fi

      - name: Update Master Lint Warnings Issue
        if: steps.should_run.outputs.should_run == 'true' && (github.event_name == 'schedule' || (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')))
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Read current warning data
            let warningData;
            try {
              warningData = JSON.parse(fs.readFileSync('./new-warnings.json', 'utf8'));
            } catch (error) {
              console.log('Could not read warning data, skipping issue update');
              return;
            }
            
            const totalWarnings = warningData.currentStatus?.totalWarnings || 0;
            const unusedVars = warningData.breakdown?.['no-unused-vars'] || 0;
            const reactHooks = warningData.breakdown?.['react-hooks/exhaustive-deps'] || 0;
            const files300Plus = warningData.fileSizeTracking?.files300Plus || 0;
            const files400Plus = warningData.fileSizeTracking?.files400Plus || 0;
            const currentDate = new Date().toLocaleDateString('en-US', { 
              year: 'numeric', 
              month: 'long', 
              day: 'numeric' 
            });
            
            const commentBody = \`## üìä Lint Warnings Update - \${currentDate}

**Total warnings:** \${totalWarnings} (target: <20)

### Breakdown:
- **Unused Variables:** \${unusedVars}
- **React Hook Dependencies:** \${reactHooks}  
- **Large Functions (75+ lines):** \${warningData.breakdown?.['max-lines-per-function'] || 0}
- **High Complexity:** \${warningData.breakdown?.['complexity'] || 0}

### Change from baseline (96 warnings):
\${totalWarnings < 96 ? '‚úÖ **Improved:** -' + (96 - totalWarnings) + ' warnings' : '‚ö†Ô∏è **Increased:** +' + (totalWarnings - 96) + ' warnings'}

*Updated automatically by GitHub Actions*\`;

            // Add comment to the master issue (Issue #568)
            try {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: 568,
                body: commentBody
              });
              
              console.log('‚úÖ Successfully added comment to Master Lint Warnings Issue #568');
            } catch (error) {
              console.log('‚ùå Failed to add comment to issue #568:', error.message);
            }
