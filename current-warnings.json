{
  "project": "violet-vault",
  "lastUpdated": "2025-09-11",
  "currentStatus": {
    "totalWarnings": 545,
    "targetWarnings": 17,
    "errors": 0
  },
  "fileSizeTracking": {
    "files300Plus": 0,
    "files400Plus": 0,
    "refactoringTarget": "Files over 300 lines should be refactored"
  },
  "warningCategories": [
    {
      "type": "max-lines-per-function",
      "count": 257,
      "severity": "warning",
      "files": [
        {
          "path": "src/components/accounts/AccountCard.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "Arrow function has too many lines (96). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/accounts/AccountFormModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 6,
              "message": "Arrow function has too many lines (264). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/accounts/SupplementalAccounts.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 9,
              "message": "Arrow function has too many lines (88). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/accounts/TransferModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "Arrow function has too many lines (110). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/activity/ActivityFeed.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 27,
              "message": "Arrow function has too many lines (224). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/analytics/AnalyticsDashboard.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 22,
              "message": "Arrow function has too many lines (270). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/analytics/CategoryAnalysisTab.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "Arrow function has too many lines (97). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/analytics/CategorySuggestionsTab.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 16,
              "message": "Arrow function has too many lines (107). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/analytics/ChartsAndAnalytics.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 17,
              "message": "Arrow function has too many lines (335). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/analytics/PerformanceMonitor.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 23,
              "message": "Arrow function has too many lines (305). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/analytics/ReportExporter.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 19,
              "message": "Arrow function has too many lines (302). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/analytics/SmartCategoryManager.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 16,
              "message": "Arrow function has too many lines (106). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/auth/AuthGateway.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has too many lines (150). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/auth/ChangePasswordModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "Arrow function has too many lines (94). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/auth/KeyManagementSettings.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 15,
              "message": "Arrow function has too many lines (239). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/auth/LocalOnlyModeSettings.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 20,
              "message": "Arrow function has too many lines (354). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/auth/LocalOnlySetup.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 19,
              "message": "Arrow function has too many lines (324). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/auth/ProfileSettings.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 6,
              "message": "Arrow function has too many lines (141). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/auth/UserIndicator.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 16,
              "message": "Arrow function has too many lines (85). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/auth/UserSetup.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 21,
              "message": "Arrow function has too many lines (137). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/auth/components/ShareCodeDisplay.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 9,
              "message": "Arrow function has too many lines (132). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/auth/key-management/ExportSection.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "Arrow function has too many lines (89). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/auth/key-management/ImportSection.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "Arrow function has too many lines (104). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/automation/AutoFundingDashboard.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 13,
              "message": "Arrow function has too many lines (206). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/automation/AutoFundingRuleBuilder.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 13,
              "message": "Arrow function has too many lines (165). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/automation/AutoFundingView.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 12,
              "message": "Arrow function has too many lines (209). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/automation/steps/ReviewStep.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 8,
              "message": "Arrow function has too many lines (94). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/automation/steps/RuleTypeStep.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has too many lines (111). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/automation/steps/TriggerScheduleStep.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 5,
              "message": "Arrow function has too many lines (99). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/automation/steps/config/PriorityFillConfig.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "Arrow function has too many lines (86). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/automation/tabs/HistoryTab.jsx",
          "warnings": 2,
          "details": [
            {
              "line": 13,
              "message": "Arrow function has too many lines (133). Maximum allowed is 75"
            },
            {
              "line": 33,
              "message": "Arrow function has too many lines (108). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/automation/tabs/RulesTab.jsx",
          "warnings": 2,
          "details": [
            {
              "line": 20,
              "message": "Arrow function has too many lines (201). Maximum allowed is 75"
            },
            {
              "line": 134,
              "message": "Arrow function has too many lines (88). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/bills/BillDiscoveryModal.jsx",
          "warnings": 2,
          "details": [
            {
              "line": 17,
              "message": "Arrow function has too many lines (334). Maximum allowed is 75"
            },
            {
              "line": 196,
              "message": "Arrow function has too many lines (129). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/bills/BillManager.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 41,
              "message": "Arrow function has too many lines (194). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/bills/BillTable.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 8,
              "message": "Arrow function has too many lines (181). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/bills/BulkBillUpdateModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 18,
              "message": "Arrow function has too many lines (168). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/bills/BulkUpdateEditor.jsx",
          "warnings": 2,
          "details": [
            {
              "line": 8,
              "message": "Arrow function has too many lines (147). Maximum allowed is 75"
            },
            {
              "line": 73,
              "message": "Arrow function has too many lines (80). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/bills/SmartBillMatcher.jsx",
          "warnings": 2,
          "details": [
            {
              "line": 5,
              "message": "Arrow function has too many lines (194). Maximum allowed is 75"
            },
            {
              "line": 64,
              "message": "Arrow function has too many lines (84). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/bills/modals/BillDetailModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 28,
              "message": "Arrow function has too many lines (268). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/bills/modals/BulkUpdateConfirmModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 9,
              "message": "Arrow function has too many lines (113). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/budgeting/BillEnvelopeFundingInfo.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 19,
              "message": "Arrow function has too many lines (177). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/budgeting/CreateEnvelopeModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 10,
              "message": "Arrow function has too many lines (179). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/budgeting/DeleteEnvelopeModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "Arrow function has too many lines (122). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/budgeting/EditEnvelopeModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 12,
              "message": "Arrow function has too many lines (203). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/budgeting/EnvelopeGrid.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 28,
              "message": "Arrow function has too many lines (199). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/budgeting/EnvelopeSystem.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 13,
              "message": "Arrow function has too many lines (154). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/budgeting/PaydayPrediction.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 15,
              "message": "Arrow function has too many lines (167). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/budgeting/SmartEnvelopeSuggestions.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 7,
              "message": "Arrow function has too many lines (134). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/budgeting/envelope/EnvelopeBasicFields.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 5,
              "message": "Arrow function has too many lines (89). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/budgeting/envelope/EnvelopeBudgetFields.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 6,
              "message": "Arrow function has too many lines (157). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/budgeting/envelope/EnvelopeHeader.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 5,
              "message": "Arrow function has too many lines (103). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/budgeting/envelope/EnvelopeItem.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 13,
              "message": "Arrow function has too many lines (363). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/budgeting/envelope/UnassignedCashEnvelope.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 5,
              "message": "Arrow function has too many lines (90). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/budgeting/paycheck/AllocationPreview.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "Arrow function has too many lines (155). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/budgeting/paycheck/PaycheckForm.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "Arrow function has too many lines (218). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/budgeting/paycheck/PaycheckHistory.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 5,
              "message": "Arrow function has too many lines (143). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/budgeting/shared/BillConnectionSelector.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 8,
              "message": "Arrow function has too many lines (108). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/budgeting/shared/EnvelopeTypeSelector.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 12,
              "message": "Arrow function has too many lines (79). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/budgeting/suggestions/SuggestionCard.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 34,
              "message": "Arrow function has too many lines (130). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/budgeting/suggestions/SuggestionSettings.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "Arrow function has too many lines (192). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/budgeting/suggestions/SuggestionsList.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 5,
              "message": "Arrow function has too many lines (96). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/charts/CategoryBarChart.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 19,
              "message": "Arrow function has too many lines (103). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/charts/ChartContainer.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 10,
              "message": "Arrow function has too many lines (92). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/charts/ComposedFinancialChart.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 22,
              "message": "Arrow function has too many lines (134). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/charts/DistributionPieChart.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 18,
              "message": "Arrow function has too many lines (82). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/charts/TrendLineChart.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 19,
              "message": "Arrow function has too many lines (77). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/dashboard/AccountBalanceOverview.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has too many lines (140). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/dashboard/ReconcileTransactionModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "Arrow function has too many lines (124). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/debt/DebtDashboard.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 17,
              "message": "Arrow function has too many lines (189). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/debt/DebtStrategies.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 17,
              "message": "Arrow function has too many lines (102). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/debt/modals/DebtDetailModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 19,
              "message": "Arrow function has too many lines (197). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/debt/modals/UpcomingPaymentsModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 8,
              "message": "Arrow function has too many lines (93). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/debt/ui/DebtFilters.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 9,
              "message": "Arrow function has too many lines (128). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/debt/ui/DebtList.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 25,
              "message": "Arrow function has too many lines (135). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/debt/ui/PaymentImpactTable.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 8,
              "message": "Arrow function has too many lines (114). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/debt/ui/StrategyCard.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 8,
              "message": "Arrow function has too many lines (109). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/feedback/BugReportButton.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has too many lines (339). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/history/BudgetHistoryViewer.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 20,
              "message": "Arrow function has too many lines (97). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/history/IntegrityStatusIndicator.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 13,
              "message": "Arrow function has too many lines (270). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/history/ObjectHistoryViewer.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 24,
              "message": "Arrow function has too many lines (189). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/history/viewer/ChangeDetails.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "Arrow function has too many lines (105). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/history/viewer/HistoryList.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has too many lines (94). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/history/viewer/IntegrityWarning.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "Arrow function has too many lines (82). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/layout/MainLayout.jsx",
          "warnings": 2,
          "details": [
            {
              "line": 41,
              "message": "Arrow function has too many lines (100). Maximum allowed is 75"
            },
            {
              "line": 172,
              "message": "Arrow function has too many lines (190). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/layout/NavigationTabs.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 9,
              "message": "Arrow function has too many lines (122). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/layout/SummaryCards.jsx",
          "warnings": 2,
          "details": [
            {
              "line": 20,
              "message": "Arrow function has too many lines (125). Maximum allowed is 75"
            },
            {
              "line": 163,
              "message": "Arrow function has too many lines (79). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/layout/ViewRenderer.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 33,
              "message": "Arrow function has too many lines (244). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/modals/CorruptionRecoveryModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has too many lines (140). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/modals/UnassignedCashModal.jsx",
          "warnings": 2,
          "details": [
            {
              "line": 27,
              "message": "Arrow function has too many lines (77). Maximum allowed is 75"
            },
            {
              "line": 109,
              "message": "Arrow function has too many lines (232). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/onboarding/EmptyStateHints.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 16,
              "message": "Arrow function has too many lines (203). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/onboarding/OnboardingProgress.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 14,
              "message": "Arrow function has too many lines (230). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/onboarding/OnboardingTutorial.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 10,
              "message": "Arrow function has too many lines (401). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/pages/MainDashboard.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 23,
              "message": "Arrow function has too many lines (134). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/receipts/ReceiptButton.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 12,
              "message": "Arrow function has too many lines (111). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/receipts/ReceiptToTransactionModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 9,
              "message": "Arrow function has too many lines (169). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/receipts/components/ReceiptUploadArea.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 8,
              "message": "Arrow function has too many lines (81). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/receipts/steps/ConfirmationStep.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 9,
              "message": "Arrow function has too many lines (194). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/receipts/steps/EnvelopeSelectionStep.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 5,
              "message": "Arrow function has too many lines (154). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/receipts/steps/ReceiptDataStep.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 5,
              "message": "Arrow function has too many lines (121). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/savings/AddEditGoalModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 10,
              "message": "Arrow function has too many lines (257). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/savings/DistributeModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 9,
              "message": "Arrow function has too many lines (204). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/savings/SavingsGoalCard.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 5,
              "message": "Arrow function has too many lines (135). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/savings/SavingsGoals.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 13,
              "message": "Arrow function has too many lines (91). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/savings/SavingsSummaryCard.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 5,
              "message": "Arrow function has too many lines (88). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/security/LocalDataSecurityWarning.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 10,
              "message": "Arrow function has too many lines (187). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/security/LockScreen.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 19,
              "message": "Arrow function has too many lines (251). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/settings/EnvelopeIntegrityChecker.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 24,
              "message": "Arrow function has too many lines (350). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/settings/SecuritySettings.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 16,
              "message": "Arrow function has too many lines (89). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/settings/SettingsDashboard.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 30,
              "message": "Arrow function has too many lines (157). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/settings/TransactionArchiving.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 21,
              "message": "Arrow function has too many lines (105). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/settings/archiving/ArchivingConfiguration.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "Arrow function has too many lines (100). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/settings/archiving/ArchivingPreviewResults.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "Arrow function has too many lines (134). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/settings/archiving/ArchivingStatusOverview.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "Arrow function has too many lines (78). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/settings/sections/AccountSettingsSection.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 8,
              "message": "Arrow function has too many lines (114). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/settings/sections/AutoLockSettingsSection.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 8,
              "message": "Arrow function has too many lines (99). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/settings/sections/DataManagementSection.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 15,
              "message": "Arrow function has too many lines (192). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/settings/sections/GeneralSettingsSection.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "Arrow function has too many lines (77). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/settings/sections/SecurityLoggingSection.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 8,
              "message": "Arrow function has too many lines (148). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/sharing/JoinBudgetModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has too many lines (405). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/sharing/ShareCodeModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 14,
              "message": "Arrow function has too many lines (282). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/sync/ActivityBanner.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 16,
              "message": "Arrow function has too many lines (235). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/sync/ManualSyncControls.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 23,
              "message": "Arrow function has too many lines (181). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/sync/SyncHealthDashboard.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 12,
              "message": "Arrow function has too many lines (297). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/sync/SyncHealthIndicator.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 6,
              "message": "Arrow function has too many lines (150). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/sync/SyncIndicator.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 7,
              "message": "Arrow function has too many lines (314). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/sync/health/SyncHealthDetails.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has too many lines (162). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/sync/health/SyncStatusIndicator.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 8,
              "message": "Arrow function has too many lines (80). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/transactions/TransactionFilters.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "Arrow function has too many lines (147). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/transactions/TransactionForm.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has too many lines (96). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/transactions/TransactionLedger.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 21,
              "message": "Arrow function has too many lines (126). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/transactions/TransactionSplitter.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 12,
              "message": "Arrow function has too many lines (97). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/transactions/TransactionTable.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 8,
              "message": "Arrow function has too many lines (117). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/transactions/components/TransactionRow.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 14,
              "message": "Arrow function has too many lines (110). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/transactions/import/FieldMapper.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 3,
              "message": "Arrow function has too many lines (115). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/transactions/import/FileUploader.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "Arrow function has too many lines (85). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/transactions/splitter/SplitAllocationRow.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "Arrow function has too many lines (91). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/transactions/splitter/SplitAllocationsSection.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 5,
              "message": "Arrow function has too many lines (99). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/ui/ConfirmModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has too many lines (133). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/ui/ConnectionDisplay.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 165,
              "message": "Arrow function has too many lines (108). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/ui/EditLockIndicator.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 8,
              "message": "Arrow function has too many lines (98). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/ui/EditableBalance.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "Arrow function has too many lines (206). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/ui/Header.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has too many lines (107). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/ui/PageSummaryCard.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 17,
              "message": "Arrow function has too many lines (113). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/ui/PromptModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has too many lines (165). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/ui/SecurityAlert.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 15,
              "message": "Arrow function has too many lines (82). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/ui/StandardFilters.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 15,
              "message": "Arrow function has too many lines (131). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/ui/StandardTabs.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 13,
              "message": "Arrow function has too many lines (209). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/ui/Toast.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "Arrow function has too many lines (95). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/components/ui/VersionFooter.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 14,
              "message": "Arrow function has too many lines (121). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/constants/debts.js",
          "warnings": 1,
          "details": [
            {
              "line": 235,
              "message": "Arrow function has too many lines (97). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/accounts/useSupplementalAccounts.js",
          "warnings": 1,
          "details": [
            {
              "line": 18,
              "message": "Arrow function has too many lines (202). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/analytics/useAnalytics.js",
          "warnings": 3,
          "details": [
            {
              "line": 10,
              "message": "Arrow function has too many lines (399). Maximum allowed is 75"
            },
            {
              "line": 87,
              "message": "Async method 'queryFn' has too many lines (131). Maximum allowed is 75"
            },
            {
              "line": 258,
              "message": "Async method 'queryFn' has too many lines (81). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/analytics/useAnalyticsData.js",
          "warnings": 1,
          "details": [
            {
              "line": 9,
              "message": "Arrow function has too many lines (270). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/analytics/useAnalyticsIntegration.js",
          "warnings": 1,
          "details": [
            {
              "line": 17,
              "message": "Arrow function has too many lines (196). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/analytics/usePerformanceMonitor.js",
          "warnings": 1,
          "details": [
            {
              "line": 8,
              "message": "Arrow function has too many lines (265). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/analytics/useReportExporter.js",
          "warnings": 2,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has too many lines (315). Maximum allowed is 75"
            },
            {
              "line": 26,
              "message": "Async arrow function has too many lines (129). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/analytics/useSmartCategoryAnalysis.js",
          "warnings": 3,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has too many lines (263). Maximum allowed is 75"
            },
            {
              "line": 92,
              "message": "Arrow function has too many lines (98). Maximum allowed is 75"
            },
            {
              "line": 207,
              "message": "Arrow function has too many lines (87). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/auth/useAuthFlow.js",
          "warnings": 2,
          "details": [
            {
              "line": 10,
              "message": "Arrow function has too many lines (162). Maximum allowed is 75"
            },
            {
              "line": 26,
              "message": "Async arrow function has too many lines (108). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/auth/useAuthenticationManager.js",
          "warnings": 1,
          "details": [
            {
              "line": 22,
              "message": "Arrow function has too many lines (79). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/auth/useKeyManagement.js",
          "warnings": 1,
          "details": [
            {
              "line": 10,
              "message": "Arrow function has too many lines (285). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/auth/useKeyManagementUI.js",
          "warnings": 1,
          "details": [
            {
              "line": 9,
              "message": "Arrow function has too many lines (84). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/auth/usePasswordRotation.js",
          "warnings": 1,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has too many lines (92). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/auth/useSecurityManager.js",
          "warnings": 1,
          "details": [
            {
              "line": 14,
              "message": "Arrow function has too many lines (160). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/auth/useUserSetup.js",
          "warnings": 1,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has too many lines (293). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/bills/useBillDetail.js",
          "warnings": 1,
          "details": [
            {
              "line": 9,
              "message": "Arrow function has too many lines (152). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/bills/useBillForm.js",
          "warnings": 1,
          "details": [
            {
              "line": 70,
              "message": "Arrow function has too many lines (233). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/bills/useBillManager.js",
          "warnings": 1,
          "details": [
            {
              "line": 28,
              "message": "Arrow function has too many lines (200). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/bills/useBillManagerUI.js",
          "warnings": 1,
          "details": [
            {
              "line": 16,
              "message": "Arrow function has too many lines (181). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/bills/useBillOperations.js",
          "warnings": 2,
          "details": [
            {
              "line": 8,
              "message": "Arrow function has too many lines (268). Maximum allowed is 75"
            },
            {
              "line": 109,
              "message": "Async arrow function has too many lines (85). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/bills/useBills/billAnalytics.js",
          "warnings": 2,
          "details": [
            {
              "line": 112,
              "message": "Arrow function has too many lines (91). Maximum allowed is 75"
            },
            {
              "line": 113,
              "message": "Arrow function has too many lines (89). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/bills/useBills/billMutations.js",
          "warnings": 1,
          "details": [
            {
              "line": 156,
              "message": "Arrow function has too many lines (83). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/bills/useBills/billQueries.js",
          "warnings": 2,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has too many lines (85). Maximum allowed is 75"
            },
            {
              "line": 20,
              "message": "Async arrow function has too many lines (76). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/autofunding/useAutoFunding.js",
          "warnings": 1,
          "details": [
            {
              "line": 14,
              "message": "Arrow function has too many lines (283). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/autofunding/useAutoFundingData.js",
          "warnings": 1,
          "details": [
            {
              "line": 10,
              "message": "Arrow function has too many lines (265). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/autofunding/useAutoFundingExecution.js",
          "warnings": 1,
          "details": [
            {
              "line": 22,
              "message": "Arrow function has too many lines (329). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/autofunding/useAutoFundingHistory.js",
          "warnings": 1,
          "details": [
            {
              "line": 9,
              "message": "Arrow function has too many lines (405). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/autofunding/useAutoFundingRules.js",
          "warnings": 1,
          "details": [
            {
              "line": 17,
              "message": "Arrow function has too many lines (304). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/metadata/useActualBalance.js",
          "warnings": 1,
          "details": [
            {
              "line": 12,
              "message": "Arrow function has too many lines (164). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/metadata/useUnassignedCash.js",
          "warnings": 1,
          "details": [
            {
              "line": 13,
              "message": "Arrow function has too many lines (85). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/useBudgetData/mutations.js",
          "warnings": 1,
          "details": [
            {
              "line": 17,
              "message": "Arrow function has too many lines (159). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/useBudgetData/paycheckMutations.js",
          "warnings": 2,
          "details": [
            {
              "line": 19,
              "message": "Arrow function has too many lines (179). Maximum allowed is 75"
            },
            {
              "line": 24,
              "message": "Async method 'mutationFn' has too many lines (108). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/useBudgetHistoryQuery.js",
          "warnings": 1,
          "details": [
            {
              "line": 136,
              "message": "Arrow function has too many lines (101). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/useEnvelopeEdit.js",
          "warnings": 1,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has too many lines (84). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/useEnvelopeForm.js",
          "warnings": 1,
          "details": [
            {
              "line": 17,
              "message": "Arrow function has too many lines (134). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/useEnvelopes.js",
          "warnings": 1,
          "details": [
            {
              "line": 21,
              "message": "Arrow function has too many lines (370). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/usePaycheckForm.js",
          "warnings": 1,
          "details": [
            {
              "line": 30,
              "message": "Arrow function has too many lines (97). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/usePaycheckProcessor.js",
          "warnings": 1,
          "details": [
            {
              "line": 18,
              "message": "Arrow function has too many lines (180). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/useSmartSuggestions.js",
          "warnings": 1,
          "details": [
            {
              "line": 13,
              "message": "Arrow function has too many lines (178). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/useUnassignedCashDistribution.js",
          "warnings": 1,
          "details": [
            {
              "line": 23,
              "message": "Arrow function has too many lines (219). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/common/useActualBalance.js",
          "warnings": 1,
          "details": [
            {
              "line": 9,
              "message": "Arrow function has too many lines (91). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/common/useBugReport.js",
          "warnings": 2,
          "details": [
            {
              "line": 13,
              "message": "Arrow function has too many lines (161). Maximum allowed is 75"
            },
            {
              "line": 47,
              "message": "Async arrow function has too many lines (118). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/common/useBugReportV2.js",
          "warnings": 1,
          "details": [
            {
              "line": 19,
              "message": "Arrow function has too many lines (314). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/common/useChartConfig.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 8,
              "message": "Arrow function has too many lines (179). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/common/useConnectionManager.js",
          "warnings": 2,
          "details": [
            {
              "line": 12,
              "message": "Arrow function has too many lines (300). Maximum allowed is 75"
            },
            {
              "line": 88,
              "message": "Async arrow function has too many lines (77). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/common/useEditLock.js",
          "warnings": 1,
          "details": [
            {
              "line": 10,
              "message": "Arrow function has too many lines (155). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/common/useOnboardingAutoComplete.js",
          "warnings": 1,
          "details": [
            {
              "line": 12,
              "message": "Arrow function has too many lines (123). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/common/useReceipts.js",
          "warnings": 1,
          "details": [
            {
              "line": 7,
              "message": "Arrow function has too many lines (144). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/common/useTransactionArchiving.js",
          "warnings": 1,
          "details": [
            {
              "line": 14,
              "message": "Arrow function has too many lines (125). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/debts/useDebtDashboard.js",
          "warnings": 1,
          "details": [
            {
              "line": 10,
              "message": "Arrow function has too many lines (120). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/debts/useDebtDetailModal.js",
          "warnings": 1,
          "details": [
            {
              "line": 9,
              "message": "Arrow function has too many lines (115). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/debts/useDebtForm.js",
          "warnings": 1,
          "details": [
            {
              "line": 29,
              "message": "Arrow function has too many lines (153). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/debts/useDebtManagement.js",
          "warnings": 1,
          "details": [
            {
              "line": 26,
              "message": "Arrow function has too many lines (284). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/debts/useDebtModalLogic.js",
          "warnings": 1,
          "details": [
            {
              "line": 18,
              "message": "Arrow function has too many lines (122). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/debts/useDebtStrategies.js",
          "warnings": 1,
          "details": [
            {
              "line": 8,
              "message": "Arrow function has too many lines (181). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/debts/useDebts.js",
          "warnings": 1,
          "details": [
            {
              "line": 8,
              "message": "Arrow function has too many lines (169). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/layout/usePaycheckOperations.js",
          "warnings": 2,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has too many lines (133). Maximum allowed is 75"
            },
            {
              "line": 13,
              "message": "Async arrow function has too many lines (125). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/receipts/useReceiptScanner.js",
          "warnings": 1,
          "details": [
            {
              "line": 10,
              "message": "Arrow function has too many lines (124). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/receipts/useReceiptToTransaction.js",
          "warnings": 1,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has too many lines (97). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/savings/useSavingsGoals/index.js",
          "warnings": 1,
          "details": [
            {
              "line": 20,
              "message": "Arrow function has too many lines (147). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/savings/useSavingsGoals/savingsMutations.js",
          "warnings": 1,
          "details": [
            {
              "line": 232,
              "message": "Arrow function has too many lines (81). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/savings/useSavingsGoalsActions.js",
          "warnings": 1,
          "details": [
            {
              "line": 10,
              "message": "Arrow function has too many lines (78). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/settings/useSettingsDashboard.js",
          "warnings": 1,
          "details": [
            {
              "line": 103,
              "message": "Arrow function has too many lines (87). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/settings/useTransactionArchiving.js",
          "warnings": 1,
          "details": [
            {
              "line": 8,
              "message": "Arrow function has too many lines (90). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/sync/useFirebaseSync.js",
          "warnings": 1,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has too many lines (97). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/sync/useManualSync.js",
          "warnings": 1,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has too many lines (165). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/sync/useSyncHealthIndicator.js",
          "warnings": 1,
          "details": [
            {
              "line": 10,
              "message": "Arrow function has too many lines (117). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/transactions/useTransactionData.js",
          "warnings": 1,
          "details": [
            {
              "line": 21,
              "message": "Arrow function has too many lines (222). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/transactions/useTransactionFilters.js",
          "warnings": 1,
          "details": [
            {
              "line": 3,
              "message": "Arrow function has too many lines (91). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/transactions/useTransactionImport.js",
          "warnings": 2,
          "details": [
            {
              "line": 12,
              "message": "Arrow function has too many lines (169). Maximum allowed is 75"
            },
            {
              "line": 63,
              "message": "Async arrow function has too many lines (107). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/transactions/useTransactionLedger.js",
          "warnings": 1,
          "details": [
            {
              "line": 15,
              "message": "Arrow function has too many lines (207). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/transactions/useTransactionMutations.js",
          "warnings": 1,
          "details": [
            {
              "line": 19,
              "message": "Arrow function has too many lines (131). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/transactions/useTransactionOperations.js",
          "warnings": 1,
          "details": [
            {
              "line": 32,
              "message": "Arrow function has too many lines (290). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/transactions/useTransactionQuery.js",
          "warnings": 2,
          "details": [
            {
              "line": 8,
              "message": "Arrow function has too many lines (155). Maximum allowed is 75"
            },
            {
              "line": 27,
              "message": "Async arrow function has too many lines (91). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/transactions/useTransactionSplitter.js",
          "warnings": 1,
          "details": [
            {
              "line": 29,
              "message": "Arrow function has too many lines (216). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/transactions/useTransactionSplitterUI.js",
          "warnings": 1,
          "details": [
            {
              "line": 28,
              "message": "Arrow function has too many lines (84). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/hooks/transactions/useTransactionsV2.js",
          "warnings": 1,
          "details": [
            {
              "line": 17,
              "message": "Arrow function has too many lines (169). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/services/bugReport/githubApiService.js",
          "warnings": 1,
          "details": [
            {
              "line": 68,
              "message": "Static method 'formatGitHubIssueBody' has too many lines (78). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/services/bugReport/reportSubmissionService.js",
          "warnings": 1,
          "details": [
            {
              "line": 16,
              "message": "Static async method 'submitWithFallbacks' has too many lines (83). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/services/editLockService.js",
          "warnings": 1,
          "details": [
            {
              "line": 51,
              "message": "Async method 'acquireLock' has too many lines (85). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/stores/ui/onboardingStore.js",
          "warnings": 1,
          "details": [
            {
              "line": 10,
              "message": "Arrow function has too many lines (103). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/stores/ui/uiStore.js",
          "warnings": 1,
          "details": [
            {
              "line": 96,
              "message": "Arrow function has too many lines (102). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/utils/budgeting/billEnvelopeCalculations.js",
          "warnings": 1,
          "details": [
            {
              "line": 266,
              "message": "Arrow function has too many lines (86). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/utils/budgeting/envelopeFormUtils.js",
          "warnings": 1,
          "details": [
            {
              "line": 44,
              "message": "Arrow function has too many lines (77). Maximum allowed is 75"
            }
          ]
        },
        {
          "path": "src/utils/budgeting/paycheckUtils.js",
          "warnings": 1,
          "details": [
            {
              "line": 119,
              "message": "Arrow function has too many lines (85). Maximum allowed is 75"
            }
          ]
        }
      ]
    },
    {
      "type": "complexity",
      "count": 66,
      "severity": "warning",
      "files": [
        {
          "path": "src/components/accounts/AccountFormModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 6,
              "message": "Arrow function has a complexity of 28. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/activity/ActivityFeed.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 83,
              "message": "Arrow function has a complexity of 46. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/analytics/AnalyticsDashboard.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 101,
              "message": "Arrow function has a complexity of 19. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/analytics/ChartsAndAnalytics.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 17,
              "message": "Arrow function has a complexity of 46. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/automation/steps/ReviewStep.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 8,
              "message": "Arrow function has a complexity of 17. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/bills/BulkUpdateEditor.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 73,
              "message": "Arrow function has a complexity of 21. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/budgeting/BillEnvelopeFundingInfo.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 19,
              "message": "Arrow function has a complexity of 34. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/budgeting/EditEnvelopeModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 12,
              "message": "Arrow function has a complexity of 19. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/budgeting/EnvelopeGrid.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 28,
              "message": "Arrow function has a complexity of 18. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/budgeting/SmartEnvelopeSuggestions.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 7,
              "message": "Arrow function has a complexity of 21. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/budgeting/envelope/EnvelopeBudgetFields.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 6,
              "message": "Arrow function has a complexity of 22. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/budgeting/envelope/EnvelopeItem.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 13,
              "message": "Arrow function has a complexity of 22. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/budgeting/shared/BillConnectionSelector.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 8,
              "message": "Arrow function has a complexity of 17. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/charts/CategoryBarChart.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 19,
              "message": "Arrow function has a complexity of 23. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/charts/ComposedFinancialChart.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 22,
              "message": "Arrow function has a complexity of 18. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/charts/DistributionPieChart.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 18,
              "message": "Arrow function has a complexity of 21. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/charts/TrendLineChart.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 19,
              "message": "Arrow function has a complexity of 17. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/dashboard/AccountBalanceOverview.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has a complexity of 17. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/history/IntegrityStatusIndicator.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 13,
              "message": "Arrow function has a complexity of 20. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/modals/UnassignedCashModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 109,
              "message": "Arrow function has a complexity of 20. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/sharing/JoinBudgetModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has a complexity of 17. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/sync/ActivityBanner.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 75,
              "message": "Arrow function has a complexity of 21. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/sync/SyncIndicator.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 7,
              "message": "Arrow function has a complexity of 46. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/sync/health/SyncHealthDetails.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has a complexity of 17. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/ui/ConnectionDisplay.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 165,
              "message": "Arrow function has a complexity of 21. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/ui/EditLockIndicator.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 8,
              "message": "Arrow function has a complexity of 25. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/ui/EditableBalance.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "Arrow function has a complexity of 19. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/components/ui/PromptModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has a complexity of 18. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/hooks/analytics/useSmartCategoryAnalysis.js",
          "warnings": 1,
          "details": [
            {
              "line": 47,
              "message": "Arrow function has a complexity of 18. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/hooks/auth/useAuthFlow.js",
          "warnings": 1,
          "details": [
            {
              "line": 26,
              "message": "Async arrow function has a complexity of 19. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/hooks/bills/useBillForm.js",
          "warnings": 2,
          "details": [
            {
              "line": 25,
              "message": "Arrow function has a complexity of 19. Maximum allowed is 15"
            },
            {
              "line": 212,
              "message": "Async arrow function has a complexity of 18. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/hooks/bills/useBillOperations.js",
          "warnings": 1,
          "details": [
            {
              "line": 109,
              "message": "Async arrow function has a complexity of 17. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/hooks/bills/useBills/billMutations.js",
          "warnings": 1,
          "details": [
            {
              "line": 161,
              "message": "Async method 'mutationFn' has a complexity of 17. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/useBudgetData/paycheckMutations.js",
          "warnings": 1,
          "details": [
            {
              "line": 24,
              "message": "Async method 'mutationFn' has a complexity of 19. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/useBudgetData/queries.js",
          "warnings": 1,
          "details": [
            {
              "line": 9,
              "message": "Arrow function has a complexity of 17. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/hooks/common/useBugReport.js",
          "warnings": 2,
          "details": [
            {
              "line": 47,
              "message": "Async arrow function has a complexity of 20. Maximum allowed is 15"
            },
            {
              "line": 95,
              "message": "Arrow function has a complexity of 16. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/hooks/common/useExportData.js",
          "warnings": 1,
          "details": [
            {
              "line": 21,
              "message": "Arrow function has a complexity of 16. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/hooks/common/useImportData.js",
          "warnings": 2,
          "details": [
            {
              "line": 19,
              "message": "Async arrow function has a complexity of 16. Maximum allowed is 15"
            },
            {
              "line": 66,
              "message": "Async arrow function has a complexity of 18. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/hooks/debts/useDebtForm.js",
          "warnings": 2,
          "details": [
            {
              "line": 41,
              "message": "Arrow function has a complexity of 24. Maximum allowed is 15"
            },
            {
              "line": 75,
              "message": "Arrow function has a complexity of 17. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/hooks/layout/usePaycheckOperations.js",
          "warnings": 1,
          "details": [
            {
              "line": 13,
              "message": "Async arrow function has a complexity of 16. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/hooks/transactions/useTransactionBalanceUpdater.js",
          "warnings": 1,
          "details": [
            {
              "line": 10,
              "message": "Async arrow function has a complexity of 16. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/hooks/transactions/useTransactionFilters.js",
          "warnings": 1,
          "details": [
            {
              "line": 14,
              "message": "Arrow function has a complexity of 18. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/hooks/transactions/useTransactionImport.js",
          "warnings": 1,
          "details": [
            {
              "line": 63,
              "message": "Async arrow function has a complexity of 23. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/hooks/transactions/useTransactionQuery.js",
          "warnings": 1,
          "details": [
            {
              "line": 27,
              "message": "Async arrow function has a complexity of 18. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/main.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 42,
              "message": "Async arrow function has a complexity of 21. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/services/bugReport/apiService.js",
          "warnings": 1,
          "details": [
            {
              "line": 77,
              "message": "Static method 'validateReportData' has a complexity of 19. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/services/bugReport/browserInfoService.js",
          "warnings": 2,
          "details": [
            {
              "line": 13,
              "message": "Static method 'getBrowserInfo' has a complexity of 19. Maximum allowed is 15"
            },
            {
              "line": 119,
              "message": "Static method 'getViewportInfo' has a complexity of 20. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/services/bugReport/githubApiService.js",
          "warnings": 1,
          "details": [
            {
              "line": 68,
              "message": "Static method 'formatGitHubIssueBody' has a complexity of 17. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/services/bugReport/pageDetectionService.js",
          "warnings": 1,
          "details": [
            {
              "line": 13,
              "message": "Static method 'identifyCurrentPage' has a complexity of 61. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/services/bugReport/performanceInfoService.js",
          "warnings": 1,
          "details": [
            {
              "line": 13,
              "message": "Static method 'getPerformanceInfo' has a complexity of 22. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/services/editLockService.js",
          "warnings": 1,
          "details": [
            {
              "line": 51,
              "message": "Async method 'acquireLock' has a complexity of 23. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/stores/ui/uiStore.js",
          "warnings": 1,
          "details": [
            {
              "line": 11,
              "message": "Async arrow function has a complexity of 19. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/utils/budgeting/billEnvelopeCalculations.js",
          "warnings": 1,
          "details": [
            {
              "line": 15,
              "message": "Arrow function has a complexity of 18. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/utils/budgeting/envelopeFormUtils.js",
          "warnings": 2,
          "details": [
            {
              "line": 44,
              "message": "Arrow function has a complexity of 31. Maximum allowed is 15"
            },
            {
              "line": 247,
              "message": "Arrow function has a complexity of 20. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/utils/budgeting/envelopeIntegrityChecker.js",
          "warnings": 1,
          "details": [
            {
              "line": 128,
              "message": "Async arrow function has a complexity of 20. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/utils/common/billDiscovery.js",
          "warnings": 1,
          "details": [
            {
              "line": 190,
              "message": "Arrow function has a complexity of 25. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/utils/common/version.js",
          "warnings": 1,
          "details": [
            {
              "line": 242,
              "message": "Arrow function has a complexity of 23. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/utils/savings/savingsCalculations.js",
          "warnings": 2,
          "details": [
            {
              "line": 208,
              "message": "Arrow function has a complexity of 31. Maximum allowed is 15"
            },
            {
              "line": 269,
              "message": "Arrow function has a complexity of 25. Maximum allowed is 15"
            }
          ]
        },
        {
          "path": "src/utils/savings/savingsFormUtils.js",
          "warnings": 1,
          "details": [
            {
              "line": 71,
              "message": "Arrow function has a complexity of 21. Maximum allowed is 15"
            }
          ]
        }
      ]
    },
    {
      "type": "no-unused-vars",
      "count": 34,
      "severity": "warning",
      "files": [
        {
          "path": "src/components/analytics/CategoryNavigationTabs.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'getIcon' is defined but never used. Allowed unused vars must match /^(_|[A-Z_]+)/u"
            }
          ]
        },
        {
          "path": "src/components/auth/components/ShareCodeDisplay.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 17,
              "message": "'error' is defined but never used"
            }
          ]
        },
        {
          "path": "src/components/budgeting/EnvelopeSummaryCards.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 9,
              "message": "'unassignedCash' is assigned a value but never used. Allowed unused args must match /^_/u"
            }
          ]
        },
        {
          "path": "src/components/debt/ui/DebtSummaryWidget.jsx",
          "warnings": 2,
          "details": [
            {
              "line": 4,
              "message": "'logger' is defined but never used. Allowed unused vars must match /^(_|[A-Z_]+)/u"
            },
            {
              "line": 11,
              "message": "'debts' is assigned a value but never used. Allowed unused vars must match /^(_|[A-Z_]+)/u"
            }
          ]
        },
        {
          "path": "src/components/layout/MainLayout.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 62,
              "message": "'isOnboarded' is assigned a value but never used. Allowed unused vars must match /^(_|[A-Z_]+)/u"
            }
          ]
        },
        {
          "path": "src/components/layout/SummaryCards.jsx",
          "warnings": 2,
          "details": [
            {
              "line": 9,
              "message": "'logger' is defined but never used. Allowed unused vars must match /^(_|[A-Z_]+)/u"
            },
            {
              "line": 22,
              "message": "'unassignedCashLoading' is assigned a value but never used. Allowed unused vars must match /^(_|[A-Z_]+)/u"
            }
          ]
        },
        {
          "path": "src/components/onboarding/OnboardingTutorial.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 320,
              "message": "'e' is defined but never used"
            }
          ]
        },
        {
          "path": "src/components/sharing/JoinBudgetModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 156,
              "message": "'processQRData' is assigned a value but never used. Allowed unused vars must match /^(_|[A-Z_]+)/u"
            }
          ]
        },
        {
          "path": "src/components/sharing/ShareCodeModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 19,
              "message": "'encryptionKey' is assigned a value but never used. Allowed unused vars must match /^(_|[A-Z_]+)/u"
            }
          ]
        },
        {
          "path": "src/hooks/bills/useBulkBillUpdate.js",
          "warnings": 1,
          "details": [
            {
              "line": 7,
              "message": "'isOpen' is defined but never used. Allowed unused args must match /^_/u"
            }
          ]
        },
        {
          "path": "src/hooks/common/useTransactionsCompat.js",
          "warnings": 1,
          "details": [
            {
              "line": 8,
              "message": "'logger' is defined but never used. Allowed unused vars must match /^(_|[A-Z_]+)/u"
            }
          ]
        },
        {
          "path": "src/hooks/debts/useDebtDashboard.js",
          "warnings": 1,
          "details": [
            {
              "line": 18,
              "message": "'linkDebtToBill' is assigned a value but never used. Allowed unused vars must match /^(_|[A-Z_]+)/u"
            }
          ]
        },
        {
          "path": "src/hooks/settings/useTransactionArchiving.js",
          "warnings": 1,
          "details": [
            {
              "line": 128,
              "message": "'onReset' is assigned a value but never used. Allowed unused vars must match /^(_|[A-Z_]+)/u"
            }
          ]
        },
        {
          "path": "src/services/budgetDatabaseService.js",
          "warnings": 1,
          "details": [
            {
              "line": 207,
              "message": "'isPaused' is assigned a value but never used. Allowed unused vars must match /^(_|[A-Z_]+)/u"
            }
          ]
        },
        {
          "path": "src/services/bugReport/contextAnalysisService.js",
          "warnings": 3,
          "details": [
            {
              "line": 187,
              "message": "'error' is defined but never used"
            },
            {
              "line": 221,
              "message": "'error' is defined but never used"
            },
            {
              "line": 248,
              "message": "'error' is defined but never used"
            }
          ]
        },
        {
          "path": "src/services/bugReport/githubApiService.js",
          "warnings": 1,
          "details": [
            {
              "line": 128,
              "message": "'screenshotInfo' is assigned a value but never used. Allowed unused vars must match /^(_|[A-Z_]+)/u"
            }
          ]
        },
        {
          "path": "src/services/bugReport/pageDetectionService.js",
          "warnings": 5,
          "details": [
            {
              "line": 173,
              "message": "'error' is defined but never used"
            },
            {
              "line": 206,
              "message": "'error' is defined but never used"
            },
            {
              "line": 221,
              "message": "'error' is defined but never used"
            },
            {
              "line": 251,
              "message": "'error' is defined but never used"
            },
            {
              "line": 281,
              "message": "'error' is defined but never used"
            }
          ]
        },
        {
          "path": "src/services/bugReport/screenshotService.js",
          "warnings": 2,
          "details": [
            {
              "line": 20,
              "message": "'isMobile' is assigned a value but never used. Allowed unused vars must match /^(_|[A-Z_]+)/u"
            },
            {
              "line": 177,
              "message": "'error' is defined but never used"
            }
          ]
        },
        {
          "path": "src/services/editLockService.js",
          "warnings": 1,
          "details": [
            {
              "line": 348,
              "message": "'lockId' is assigned a value but never used. Allowed unused vars must match /^(_|[A-Z_]+)/u"
            }
          ]
        },
        {
          "path": "src/services/security/securityService.js",
          "warnings": 1,
          "details": [
            {
              "line": 113,
              "message": "'err' is defined but never used"
            }
          ]
        },
        {
          "path": "src/utils/accounts/accountHelpers.js",
          "warnings": 1,
          "details": [
            {
              "line": 190,
              "message": "'typeInfo' is assigned a value but never used. Allowed unused vars must match /^(_|[A-Z_]+)/u"
            }
          ]
        },
        {
          "path": "src/utils/analytics/categoryHelpers.js",
          "warnings": 1,
          "details": [
            {
              "line": 92,
              "message": "'error' is defined but never used"
            }
          ]
        },
        {
          "path": "src/utils/budgeting/autofunding/simulation.js",
          "warnings": 1,
          "details": [
            {
              "line": 336,
              "message": "'unassignedCash' is assigned a value but never used. Allowed unused vars must match /^(_|[A-Z_]+)/u"
            }
          ]
        },
        {
          "path": "src/utils/common/analyticsProcessor.js",
          "warnings": 2,
          "details": [
            {
              "line": 76,
              "message": "'error' is defined but never used"
            },
            {
              "line": 198,
              "message": "'error' is defined but never used"
            }
          ]
        }
      ]
    },
    {
      "type": "no-undef",
      "count": 3,
      "severity": "warning",
      "files": [
        {
          "path": "src/components/analytics/CategoryNavigationTabs.jsx",
          "warnings": 3,
          "details": [
            {
              "line": 14,
              "message": "'Lightbulb' is not defined"
            },
            {
              "line": 20,
              "message": "'BarChart3' is not defined"
            },
            {
              "line": 26,
              "message": "'Settings' is not defined"
            }
          ]
        }
      ]
    },
    {
      "type": "no-restricted-imports",
      "count": 128,
      "severity": "warning",
      "files": [
        {
          "path": "src/components/analytics/CategorySuggestionsTab.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/analytics/PerformanceMonitor.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/analytics/ReportExporter.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/analytics/trends/ForecastSummaryCard.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/analytics/trends/HistoricalTrendsChart.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 14,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/analytics/trends/InsightsPanel.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/analytics/ui/MetricCard.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/auth/ChangePasswordModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/auth/KeyManagementSettings.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/auth/LocalOnlyModeSettings.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 3,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/auth/LocalOnlySetup.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 3,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/auth/ProfileSettings.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/auth/UserIndicator.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/auth/components/PasswordInput.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/auth/key-management/AdvancedSection.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 1,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/auth/key-management/ExportSection.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 1,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/auth/key-management/ImportSection.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 1,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/auth/key-management/PasswordField.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 1,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/auth/key-management/TabNavigation.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 1,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/automation/AutoFundingDashboard.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 4,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/automation/AutoFundingRuleBuilder.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/automation/components/StepNavigation.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/automation/steps/ReviewStep.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/automation/steps/RuleTypeStep.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/automation/steps/TriggerScheduleStep.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/automation/steps/config/FixedAmountConfig.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/automation/steps/config/PercentageConfig.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/automation/steps/config/PriorityFillConfig.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/automation/steps/config/SplitRemainderConfig.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/automation/tabs/HistoryTab.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/automation/tabs/RulesTab.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/bills/BillDiscoveryModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/bills/BillFormFields.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/bills/BillManager.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 8,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/bills/BillManagerHeader.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/bills/BillModalHeader.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/bills/BillTable.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/bills/BillTabs.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/bills/BulkBillUpdateModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/bills/BulkUpdateEditor.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/bills/SmartBillMatcher.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 3,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/bills/modals/BillDetailModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/bills/modals/BulkUpdateConfirmModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/budgeting/BillEnvelopeFundingInfo.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/budgeting/CashFlowSummary.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/budgeting/CreateEnvelopeModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/budgeting/DeleteEnvelopeModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/budgeting/EditEnvelopeModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/budgeting/PaydayPrediction.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/budgeting/SmartEnvelopeSuggestions.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/budgeting/envelope/EnvelopeBasicFields.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/budgeting/envelope/EnvelopeBudgetFields.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/budgeting/envelope/EnvelopeHeader.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/budgeting/envelope/EnvelopeHistoryModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/budgeting/envelope/EnvelopeModalHeader.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/budgeting/envelope/UnassignedCashEnvelope.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/budgeting/paycheck/AllocationPreview.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/budgeting/paycheck/PaycheckForm.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/budgeting/paycheck/PaycheckHistory.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/budgeting/shared/AllocationModeSelector.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/budgeting/shared/BillConnectionSelector.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/budgeting/shared/EnvelopeTypeSelector.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/budgeting/shared/FrequencySelector.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/budgeting/suggestions/SuggestionCard.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/budgeting/suggestions/SuggestionSettings.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/budgeting/suggestions/SuggestionsList.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/charts/ChartContainer.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 3,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/dashboard/AccountBalanceOverview.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/dashboard/RecentTransactionsWidget.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/dashboard/ReconcileTransactionModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/debt/DebtStrategies.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/debt/modals/DebtDetailModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/debt/modals/DebtFormFields.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/debt/modals/DebtModalHeader.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/debt/modals/UpcomingPaymentsModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/debt/ui/DebtFilters.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/debt/ui/DebtList.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/debt/ui/DebtSummaryCards.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/debt/ui/DebtSummaryWidget.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/debt/ui/PaymentImpactTable.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/debt/ui/StrategyCard.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/feedback/BugReportButton.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/history/BudgetHistoryViewer.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 7,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/history/IntegrityStatusIndicator.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/history/ObjectHistoryViewer.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 3,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/history/viewer/ChangeDetails.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/history/viewer/HistoryControls.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/history/viewer/HistoryHeader.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/history/viewer/HistoryList.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/history/viewer/HistoryStatistics.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/history/viewer/IntegrityWarning.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/modals/UnassignedCashModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/onboarding/EmptyStateHints.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/onboarding/OnboardingProgress.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/savings/AddEditGoalModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 3,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/savings/DistributeModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 3,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/savings/SavingsGoalCard.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 3,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/savings/SavingsGoals.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 3,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/savings/SavingsSummaryCard.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 3,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/security/LocalDataSecurityWarning.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/security/LockScreen.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 3,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/settings/EnvelopeIntegrityChecker.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/settings/SettingsDashboard.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/settings/TransactionArchiving.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/settings/archiving/ArchivingActionButtons.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/settings/archiving/ArchivingConfiguration.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/settings/archiving/ArchivingHeader.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/settings/archiving/ArchivingPreviewResults.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/settings/archiving/ArchivingProgress.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/settings/archiving/ArchivingResult.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/settings/archiving/ArchivingStatusOverview.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/settings/layout/SettingsLayout.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/settings/modals/ResetConfirmModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/settings/sections/DataManagementSection.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 3,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/settings/sections/GeneralSettingsSection.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/settings/sections/SecuritySettingsSection.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/sync/ActivityBanner.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 3,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/sync/ConflictResolutionModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/sync/ManualSyncControls.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 6,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/transactions/TransactionFilters.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/transactions/TransactionFormFields.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/transactions/TransactionModalHeader.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/transactions/TransactionSummary.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/transactions/TransactionSummaryCards.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/components/transactions/components/DeleteConfirmation.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/hooks/bills/useBillManagerUI.js",
          "warnings": 1,
          "details": [
            {
              "line": 8,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/hooks/history/useBudgetHistoryViewer.js",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        },
        {
          "path": "src/hooks/settings/useSettingsDashboard.js",
          "warnings": 1,
          "details": [
            {
              "line": 2,
              "message": "'lucide-react' import is restricted from being used. Use centralized icon system instead of direct lucide-react imports. Import icons from '@/utils/icons' or use { getIcon, renderIcon } from '@/utils'. See docs/ICON_MIGRATION_PLAN.md for details"
            }
          ]
        }
      ]
    },
    {
      "type": "max-statements",
      "count": 28,
      "severity": "warning",
      "files": [
        {
          "path": "src/components/budgeting/EnvelopeGrid.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 28,
              "message": "Arrow function has too many statements (26). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/components/layout/MainLayout.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 172,
              "message": "Arrow function has too many statements (27). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/components/security/LockScreen.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 60,
              "message": "Async arrow function has too many statements (37). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/hooks/analytics/useAnalyticsIntegration.js",
          "warnings": 1,
          "details": [
            {
              "line": 122,
              "message": "Async arrow function has too many statements (27). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/hooks/analytics/useReportExporter.js",
          "warnings": 1,
          "details": [
            {
              "line": 26,
              "message": "Async arrow function has too many statements (66). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/hooks/auth/useAuthFlow.js",
          "warnings": 1,
          "details": [
            {
              "line": 26,
              "message": "Async arrow function has too many statements (57). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/hooks/auth/useUserSetup.js",
          "warnings": 1,
          "details": [
            {
              "line": 24,
              "message": "Async arrow function has too many statements (27). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/hooks/bills/useBillManager.js",
          "warnings": 1,
          "details": [
            {
              "line": 28,
              "message": "Arrow function has too many statements (28). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/hooks/bills/useBillOperations.js",
          "warnings": 2,
          "details": [
            {
              "line": 22,
              "message": "Async arrow function has too many statements (29). Maximum allowed is 25"
            },
            {
              "line": 109,
              "message": "Async arrow function has too many statements (33). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/useBudgetData/mutations.js",
          "warnings": 1,
          "details": [
            {
              "line": 83,
              "message": "Async method 'mutationFn' has too many statements (30). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/useBudgetData/paycheckMutations.js",
          "warnings": 1,
          "details": [
            {
              "line": 24,
              "message": "Async method 'mutationFn' has too many statements (32). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/hooks/common/useBugReport.js",
          "warnings": 1,
          "details": [
            {
              "line": 47,
              "message": "Async arrow function has too many statements (37). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/hooks/common/useBugReportV2.js",
          "warnings": 1,
          "details": [
            {
              "line": 19,
              "message": "Arrow function has too many statements (30). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/hooks/common/useConnectionManager.js",
          "warnings": 1,
          "details": [
            {
              "line": 88,
              "message": "Async arrow function has too many statements (27). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/hooks/layout/usePaycheckOperations.js",
          "warnings": 1,
          "details": [
            {
              "line": 13,
              "message": "Async arrow function has too many statements (43). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/hooks/transactions/useTransactionImport.js",
          "warnings": 1,
          "details": [
            {
              "line": 63,
              "message": "Async arrow function has too many statements (44). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/hooks/transactions/useTransactionLedger.js",
          "warnings": 1,
          "details": [
            {
              "line": 15,
              "message": "Arrow function has too many statements (33). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/hooks/transactions/useTransactionQuery.js",
          "warnings": 1,
          "details": [
            {
              "line": 27,
              "message": "Async arrow function has too many statements (30). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/main.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 42,
              "message": "Async arrow function has too many statements (26). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/services/bugReport/pageDetectionService.js",
          "warnings": 1,
          "details": [
            {
              "line": 13,
              "message": "Static method 'identifyCurrentPage' has too many statements (42). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/services/editLockService.js",
          "warnings": 1,
          "details": [
            {
              "line": 51,
              "message": "Async method 'acquireLock' has too many statements (31). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/utils/bills/billCalculations.js",
          "warnings": 1,
          "details": [
            {
              "line": 14,
              "message": "Arrow function has too many statements (26). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/utils/budgeting/envelopeFormUtils.js",
          "warnings": 1,
          "details": [
            {
              "line": 44,
              "message": "Arrow function has too many statements (36). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/utils/budgeting/envelopeIntegrityChecker.js",
          "warnings": 1,
          "details": [
            {
              "line": 128,
              "message": "Async arrow function has too many statements (37). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/utils/common/billDiscovery.js",
          "warnings": 1,
          "details": [
            {
              "line": 190,
              "message": "Arrow function has too many statements (27). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/utils/common/transactionArchiving.js",
          "warnings": 1,
          "details": [
            {
              "line": 150,
              "message": "Arrow function has too many statements (28). Maximum allowed is 25"
            }
          ]
        },
        {
          "path": "src/utils/savings/savingsFormUtils.js",
          "warnings": 1,
          "details": [
            {
              "line": 71,
              "message": "Arrow function has too many statements (30). Maximum allowed is 25"
            }
          ]
        }
      ]
    },
    {
      "type": "react-hooks/exhaustive-deps",
      "count": 23,
      "severity": "warning",
      "files": [
        {
          "path": "src/components/onboarding/OnboardingTutorial.jsx",
          "warnings": 2,
          "details": [
            {
              "line": 161,
              "message": "The 'closeTutorial' function makes the dependencies of useEffect Hook (at line 178) change on every render. To fix this, wrap the definition of 'closeTutorial' in its own useCallback() Hook"
            },
            {
              "line": 351,
              "message": "React Hook useEffect has missing dependencies: 'highlightElement' and 'removeHighlight'. Either include them or remove the dependency array"
            }
          ]
        },
        {
          "path": "src/components/settings/EnvelopeIntegrityChecker.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 38,
              "message": "The 'scanForCorruptedEnvelopes' function makes the dependencies of useEffect Hook (at line 36) change on every render. To fix this, wrap the definition of 'scanForCorruptedEnvelopes' in its own useCallback() Hook"
            }
          ]
        },
        {
          "path": "src/components/sharing/JoinBudgetModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 35,
              "message": "React Hook useEffect has a missing dependency: 'validateShareCode'. Either include it or remove the dependency array"
            }
          ]
        },
        {
          "path": "src/components/sharing/ShareCodeModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 27,
              "message": "React Hook useEffect has missing dependencies: 'loadExistingShareCode' and 'shareData'. Either include them or remove the dependency array"
            }
          ]
        },
        {
          "path": "src/components/ui/PromptModal.jsx",
          "warnings": 1,
          "details": [
            {
              "line": 60,
              "message": "React Hook useEffect has missing dependencies: 'handleConfirm' and 'onCancel'. Either include them or remove the dependency array. If 'onCancel' changes too often, find the parent component that defines it and wrap that definition in useCallback"
            }
          ]
        },
        {
          "path": "src/hooks/analytics/useSmartCategoryAnalysis.js",
          "warnings": 2,
          "details": [
            {
              "line": 25,
              "message": "The 'settings' object makes the dependencies of useMemo Hook (at line 204) change on every render. To fix this, wrap the initialization of 'settings' in its own useMemo() Hook"
            },
            {
              "line": 25,
              "message": "The 'settings' object makes the dependencies of useMemo Hook (at line 304) change on every render. To fix this, wrap the initialization of 'settings' in its own useMemo() Hook"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/autofunding/useAutoFunding.js",
          "warnings": 2,
          "details": [
            {
              "line": 48,
              "message": "React Hook useEffect has missing dependencies: 'dataHook' and 'rulesHook'. Either include them or remove the dependency array"
            },
            {
              "line": 62,
              "message": "React Hook useEffect has a missing dependency: 'dataHook'. Either include it or remove the dependency array"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/autofunding/useAutoFundingExecution.js",
          "warnings": 3,
          "details": [
            {
              "line": 77,
              "message": "React Hook useCallback has a missing dependency: 'executeRulesWithContext'. Either include it or remove the dependency array"
            },
            {
              "line": 165,
              "message": "React Hook useCallback has a missing dependency: 'executeSingleRule'. Either include it or remove the dependency array"
            },
            {
              "line": 214,
              "message": "React Hook useCallback has a missing dependency: 'executeTransfer'. Either include it or remove the dependency array"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/autofunding/useAutoFundingHistory.js",
          "warnings": 2,
          "details": [
            {
              "line": 193,
              "message": "React Hook useCallback has a missing dependency: 'undoExecution'. Either include it or remove the dependency array"
            },
            {
              "line": 270,
              "message": "React Hook useCallback has a missing dependency: 'reverseTransfer'. Either include it or remove the dependency array"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/usePaycheckProcessor.js",
          "warnings": 1,
          "details": [
            {
              "line": 180,
              "message": "React Hook useCallback has a missing dependency: 'resetForm'. Either include it or remove the dependency array"
            }
          ]
        },
        {
          "path": "src/hooks/budgeting/useSmartSuggestions.js",
          "warnings": 1,
          "details": [
            {
              "line": 135,
              "message": "React Hook useCallback has a missing dependency: 'handleDismissSuggestion'. Either include it or remove the dependency array"
            }
          ]
        },
        {
          "path": "src/hooks/common/useConnectionManager.js",
          "warnings": 2,
          "details": [
            {
              "line": 59,
              "message": "React Hook useMemo has an unnecessary dependency: 'debts'. Either exclude it or remove the dependency array"
            },
            {
              "line": 85,
              "message": "React Hook useMemo has an unnecessary dependency: 'debts'. Either exclude it or remove the dependency array"
            }
          ]
        },
        {
          "path": "src/hooks/common/useEditLock.js",
          "warnings": 1,
          "details": [
            {
              "line": 72,
              "message": "React Hook useEffect has a missing dependency: 'acquireLock'. Either include it or remove the dependency array"
            }
          ]
        },
        {
          "path": "src/hooks/common/useOnboardingAutoComplete.js",
          "warnings": 1,
          "details": [
            {
              "line": 91,
              "message": "React Hook useEffect has a missing dependency: 'bills'. Either include it or remove the dependency array"
            }
          ]
        },
        {
          "path": "src/hooks/debts/useDebtManagement.js",
          "warnings": 1,
          "details": [
            {
              "line": 33,
              "message": "The 'debts' logical expression could make the dependencies of useMemo Hook (at line 106) change on every render. To fix this, wrap the initialization of 'debts' in its own useMemo() Hook"
            }
          ]
        },
        {
          "path": "src/hooks/debts/useDebtModalLogic.js",
          "warnings": 1,
          "details": [
            {
              "line": 81,
              "message": "React Hook useMemo has a missing dependency: 'debtFormHook'. Either include it or remove the dependency array"
            }
          ]
        }
      ]
    },
    {
      "type": "max-params",
      "count": 5,
      "severity": "warning",
      "files": [
        {
          "path": "src/hooks/bills/useBillDetail.js",
          "warnings": 1,
          "details": [
            {
              "line": 16,
              "message": "Arrow function has too many parameters (6). Maximum allowed is 5"
            }
          ]
        },
        {
          "path": "src/hooks/debts/useDebtDetailModal.js",
          "warnings": 1,
          "details": [
            {
              "line": 16,
              "message": "Arrow function has too many parameters (6). Maximum allowed is 5"
            }
          ]
        },
        {
          "path": "src/hooks/transactions/useTransactionFilters.js",
          "warnings": 1,
          "details": [
            {
              "line": 11,
              "message": "Arrow function has too many parameters (7). Maximum allowed is 5"
            }
          ]
        },
        {
          "path": "src/utils/budgeting/envelopeCalculations.js",
          "warnings": 1,
          "details": [
            {
              "line": 120,
              "message": "Arrow function has too many parameters (6). Maximum allowed is 5"
            }
          ]
        },
        {
          "path": "src/utils/budgeting/suggestionUtils.js",
          "warnings": 1,
          "details": [
            {
              "line": 345,
              "message": "Arrow function has too many parameters (6). Maximum allowed is 5"
            }
          ]
        }
      ]
    },
    {
      "type": "max-depth",
      "count": 1,
      "severity": "warning",
      "files": [
        {
          "path": "src/hooks/budgeting/useBudgetData/mutations.js",
          "warnings": 1,
          "details": [
            {
              "line": 133,
              "message": "Blocks are nested too deeply (6). Maximum allowed is 5"
            }
          ]
        }
      ]
    }
  ],
  "actionPlan": {
    "highPriority": [
      {
        "task": "Fix no-unused-vars warnings",
        "warningsAffected": 34,
        "files": [
          "CategoryNavigationTabs.jsx",
          "ShareCodeDisplay.jsx",
          "EnvelopeSummaryCards.jsx",
          "DebtSummaryWidget.jsx",
          "MainLayout.jsx",
          "SummaryCards.jsx",
          "OnboardingTutorial.jsx",
          "JoinBudgetModal.jsx",
          "ShareCodeModal.jsx",
          "useBulkBillUpdate.js",
          "useTransactionsCompat.js",
          "useDebtDashboard.js",
          "useTransactionArchiving.js",
          "budgetDatabaseService.js",
          "contextAnalysisService.js",
          "githubApiService.js",
          "pageDetectionService.js",
          "screenshotService.js",
          "editLockService.js",
          "securityService.js",
          "accountHelpers.js",
          "categoryHelpers.js",
          "simulation.js",
          "analyticsProcessor.js"
        ],
        "action": "Remove unused variables or prefix with underscore if intentionally unused"
      },
      {
        "task": "Fix react-hooks/exhaustive-deps warnings",
        "warningsAffected": 23,
        "files": [
          "OnboardingTutorial.jsx",
          "EnvelopeIntegrityChecker.jsx",
          "JoinBudgetModal.jsx",
          "ShareCodeModal.jsx",
          "PromptModal.jsx",
          "useSmartCategoryAnalysis.js",
          "useAutoFunding.js",
          "useAutoFundingExecution.js",
          "useAutoFundingHistory.js",
          "usePaycheckProcessor.js",
          "useSmartSuggestions.js",
          "useConnectionManager.js",
          "useEditLock.js",
          "useOnboardingAutoComplete.js",
          "useDebtManagement.js",
          "useDebtModalLogic.js"
        ],
        "action": "Add missing dependencies to useEffect dependency array"
      }
    ],
    "mediumPriority": [
      {
        "task": "Fix max-lines-per-function warnings",
        "warningsAffected": 257,
        "files": [
          "AccountCard.jsx",
          "AccountFormModal.jsx",
          "SupplementalAccounts.jsx",
          "TransferModal.jsx",
          "ActivityFeed.jsx",
          "AnalyticsDashboard.jsx",
          "CategoryAnalysisTab.jsx",
          "CategorySuggestionsTab.jsx",
          "ChartsAndAnalytics.jsx",
          "PerformanceMonitor.jsx",
          "ReportExporter.jsx",
          "SmartCategoryManager.jsx",
          "AuthGateway.jsx",
          "ChangePasswordModal.jsx",
          "KeyManagementSettings.jsx",
          "LocalOnlyModeSettings.jsx",
          "LocalOnlySetup.jsx",
          "ProfileSettings.jsx",
          "UserIndicator.jsx",
          "UserSetup.jsx",
          "ShareCodeDisplay.jsx",
          "ExportSection.jsx",
          "ImportSection.jsx",
          "AutoFundingDashboard.jsx",
          "AutoFundingRuleBuilder.jsx",
          "AutoFundingView.jsx",
          "ReviewStep.jsx",
          "RuleTypeStep.jsx",
          "TriggerScheduleStep.jsx",
          "PriorityFillConfig.jsx",
          "HistoryTab.jsx",
          "RulesTab.jsx",
          "BillDiscoveryModal.jsx",
          "BillManager.jsx",
          "BillTable.jsx",
          "BulkBillUpdateModal.jsx",
          "BulkUpdateEditor.jsx",
          "SmartBillMatcher.jsx",
          "BillDetailModal.jsx",
          "BulkUpdateConfirmModal.jsx",
          "BillEnvelopeFundingInfo.jsx",
          "CreateEnvelopeModal.jsx",
          "DeleteEnvelopeModal.jsx",
          "EditEnvelopeModal.jsx",
          "EnvelopeGrid.jsx",
          "EnvelopeSystem.jsx",
          "PaydayPrediction.jsx",
          "SmartEnvelopeSuggestions.jsx",
          "EnvelopeBasicFields.jsx",
          "EnvelopeBudgetFields.jsx",
          "EnvelopeHeader.jsx",
          "EnvelopeItem.jsx",
          "UnassignedCashEnvelope.jsx",
          "AllocationPreview.jsx",
          "PaycheckForm.jsx",
          "PaycheckHistory.jsx",
          "BillConnectionSelector.jsx",
          "EnvelopeTypeSelector.jsx",
          "SuggestionCard.jsx",
          "SuggestionSettings.jsx",
          "SuggestionsList.jsx",
          "CategoryBarChart.jsx",
          "ChartContainer.jsx",
          "ComposedFinancialChart.jsx",
          "DistributionPieChart.jsx",
          "TrendLineChart.jsx",
          "AccountBalanceOverview.jsx",
          "ReconcileTransactionModal.jsx",
          "DebtDashboard.jsx",
          "DebtStrategies.jsx",
          "DebtDetailModal.jsx",
          "UpcomingPaymentsModal.jsx",
          "DebtFilters.jsx",
          "DebtList.jsx",
          "PaymentImpactTable.jsx",
          "StrategyCard.jsx",
          "BugReportButton.jsx",
          "BudgetHistoryViewer.jsx",
          "IntegrityStatusIndicator.jsx",
          "ObjectHistoryViewer.jsx",
          "ChangeDetails.jsx",
          "HistoryList.jsx",
          "IntegrityWarning.jsx",
          "MainLayout.jsx",
          "NavigationTabs.jsx",
          "SummaryCards.jsx",
          "ViewRenderer.jsx",
          "CorruptionRecoveryModal.jsx",
          "UnassignedCashModal.jsx",
          "EmptyStateHints.jsx",
          "OnboardingProgress.jsx",
          "OnboardingTutorial.jsx",
          "MainDashboard.jsx",
          "ReceiptButton.jsx",
          "ReceiptToTransactionModal.jsx",
          "ReceiptUploadArea.jsx",
          "ConfirmationStep.jsx",
          "EnvelopeSelectionStep.jsx",
          "ReceiptDataStep.jsx",
          "AddEditGoalModal.jsx",
          "DistributeModal.jsx",
          "SavingsGoalCard.jsx",
          "SavingsGoals.jsx",
          "SavingsSummaryCard.jsx",
          "LocalDataSecurityWarning.jsx",
          "LockScreen.jsx",
          "EnvelopeIntegrityChecker.jsx",
          "SecuritySettings.jsx",
          "SettingsDashboard.jsx",
          "TransactionArchiving.jsx",
          "ArchivingConfiguration.jsx",
          "ArchivingPreviewResults.jsx",
          "ArchivingStatusOverview.jsx",
          "AccountSettingsSection.jsx",
          "AutoLockSettingsSection.jsx",
          "DataManagementSection.jsx",
          "GeneralSettingsSection.jsx",
          "SecurityLoggingSection.jsx",
          "JoinBudgetModal.jsx",
          "ShareCodeModal.jsx",
          "ActivityBanner.jsx",
          "ManualSyncControls.jsx",
          "SyncHealthDashboard.jsx",
          "SyncHealthIndicator.jsx",
          "SyncIndicator.jsx",
          "SyncHealthDetails.jsx",
          "SyncStatusIndicator.jsx",
          "TransactionFilters.jsx",
          "TransactionForm.jsx",
          "TransactionLedger.jsx",
          "TransactionSplitter.jsx",
          "TransactionTable.jsx",
          "TransactionRow.jsx",
          "FieldMapper.jsx",
          "FileUploader.jsx",
          "SplitAllocationRow.jsx",
          "SplitAllocationsSection.jsx",
          "ConfirmModal.jsx",
          "ConnectionDisplay.jsx",
          "EditLockIndicator.jsx",
          "EditableBalance.jsx",
          "Header.jsx",
          "PageSummaryCard.jsx",
          "PromptModal.jsx",
          "SecurityAlert.jsx",
          "StandardFilters.jsx",
          "StandardTabs.jsx",
          "Toast.jsx",
          "VersionFooter.jsx",
          "debts.js",
          "useSupplementalAccounts.js",
          "useAnalytics.js",
          "useAnalyticsData.js",
          "useAnalyticsIntegration.js",
          "usePerformanceMonitor.js",
          "useReportExporter.js",
          "useSmartCategoryAnalysis.js",
          "useAuthFlow.js",
          "useAuthenticationManager.js",
          "useKeyManagement.js",
          "useKeyManagementUI.js",
          "usePasswordRotation.js",
          "useSecurityManager.js",
          "useUserSetup.js",
          "useBillDetail.js",
          "useBillForm.js",
          "useBillManager.js",
          "useBillManagerUI.js",
          "useBillOperations.js",
          "billAnalytics.js",
          "billMutations.js",
          "billQueries.js",
          "useAutoFunding.js",
          "useAutoFundingData.js",
          "useAutoFundingExecution.js",
          "useAutoFundingHistory.js",
          "useAutoFundingRules.js",
          "useActualBalance.js",
          "useUnassignedCash.js",
          "mutations.js",
          "paycheckMutations.js",
          "useBudgetHistoryQuery.js",
          "useEnvelopeEdit.js",
          "useEnvelopeForm.js",
          "useEnvelopes.js",
          "usePaycheckForm.js",
          "usePaycheckProcessor.js",
          "useSmartSuggestions.js",
          "useUnassignedCashDistribution.js",
          "useActualBalance.js",
          "useBugReport.js",
          "useBugReportV2.js",
          "useChartConfig.jsx",
          "useConnectionManager.js",
          "useEditLock.js",
          "useOnboardingAutoComplete.js",
          "useReceipts.js",
          "useTransactionArchiving.js",
          "useDebtDashboard.js",
          "useDebtDetailModal.js",
          "useDebtForm.js",
          "useDebtManagement.js",
          "useDebtModalLogic.js",
          "useDebtStrategies.js",
          "useDebts.js",
          "usePaycheckOperations.js",
          "useReceiptScanner.js",
          "useReceiptToTransaction.js",
          "index.js",
          "savingsMutations.js",
          "useSavingsGoalsActions.js",
          "useSettingsDashboard.js",
          "useTransactionArchiving.js",
          "useFirebaseSync.js",
          "useManualSync.js",
          "useSyncHealthIndicator.js",
          "useTransactionData.js",
          "useTransactionFilters.js",
          "useTransactionImport.js",
          "useTransactionLedger.js",
          "useTransactionMutations.js",
          "useTransactionOperations.js",
          "useTransactionQuery.js",
          "useTransactionSplitter.js",
          "useTransactionSplitterUI.js",
          "useTransactionsV2.js",
          "githubApiService.js",
          "reportSubmissionService.js",
          "editLockService.js",
          "onboardingStore.js",
          "uiStore.js",
          "billEnvelopeCalculations.js",
          "envelopeFormUtils.js",
          "paycheckUtils.js"
        ],
        "action": "Split large function into smaller, focused functions"
      },
      {
        "task": "Fix complexity warnings",
        "warningsAffected": 66,
        "files": [
          "AccountFormModal.jsx",
          "ActivityFeed.jsx",
          "AnalyticsDashboard.jsx",
          "ChartsAndAnalytics.jsx",
          "ReviewStep.jsx",
          "BulkUpdateEditor.jsx",
          "BillEnvelopeFundingInfo.jsx",
          "EditEnvelopeModal.jsx",
          "EnvelopeGrid.jsx",
          "SmartEnvelopeSuggestions.jsx",
          "EnvelopeBudgetFields.jsx",
          "EnvelopeItem.jsx",
          "BillConnectionSelector.jsx",
          "CategoryBarChart.jsx",
          "ComposedFinancialChart.jsx",
          "DistributionPieChart.jsx",
          "TrendLineChart.jsx",
          "AccountBalanceOverview.jsx",
          "IntegrityStatusIndicator.jsx",
          "UnassignedCashModal.jsx",
          "JoinBudgetModal.jsx",
          "ActivityBanner.jsx",
          "SyncIndicator.jsx",
          "SyncHealthDetails.jsx",
          "ConnectionDisplay.jsx",
          "EditLockIndicator.jsx",
          "EditableBalance.jsx",
          "PromptModal.jsx",
          "useSmartCategoryAnalysis.js",
          "useAuthFlow.js",
          "useBillForm.js",
          "useBillOperations.js",
          "billMutations.js",
          "paycheckMutations.js",
          "queries.js",
          "useBugReport.js",
          "useExportData.js",
          "useImportData.js",
          "useDebtForm.js",
          "usePaycheckOperations.js",
          "useTransactionBalanceUpdater.js",
          "useTransactionFilters.js",
          "useTransactionImport.js",
          "useTransactionQuery.js",
          "main.jsx",
          "apiService.js",
          "browserInfoService.js",
          "githubApiService.js",
          "pageDetectionService.js",
          "performanceInfoService.js",
          "editLockService.js",
          "uiStore.js",
          "billEnvelopeCalculations.js",
          "envelopeFormUtils.js",
          "envelopeIntegrityChecker.js",
          "billDiscovery.js",
          "version.js",
          "savingsCalculations.js",
          "savingsFormUtils.js"
        ],
        "action": "Reduce function complexity - extract smaller functions or simplify logic"
      },
      {
        "task": "Fix no-restricted-imports warnings",
        "warningsAffected": 128,
        "files": [
          "CategorySuggestionsTab.jsx",
          "PerformanceMonitor.jsx",
          "ReportExporter.jsx",
          "ForecastSummaryCard.jsx",
          "HistoricalTrendsChart.jsx",
          "InsightsPanel.jsx",
          "MetricCard.jsx",
          "ChangePasswordModal.jsx",
          "KeyManagementSettings.jsx",
          "LocalOnlyModeSettings.jsx",
          "LocalOnlySetup.jsx",
          "ProfileSettings.jsx",
          "UserIndicator.jsx",
          "PasswordInput.jsx",
          "AdvancedSection.jsx",
          "ExportSection.jsx",
          "ImportSection.jsx",
          "PasswordField.jsx",
          "TabNavigation.jsx",
          "AutoFundingDashboard.jsx",
          "AutoFundingRuleBuilder.jsx",
          "StepNavigation.jsx",
          "ReviewStep.jsx",
          "RuleTypeStep.jsx",
          "TriggerScheduleStep.jsx",
          "FixedAmountConfig.jsx",
          "PercentageConfig.jsx",
          "PriorityFillConfig.jsx",
          "SplitRemainderConfig.jsx",
          "HistoryTab.jsx",
          "RulesTab.jsx",
          "BillDiscoveryModal.jsx",
          "BillFormFields.jsx",
          "BillManager.jsx",
          "BillManagerHeader.jsx",
          "BillModalHeader.jsx",
          "BillTable.jsx",
          "BillTabs.jsx",
          "BulkBillUpdateModal.jsx",
          "BulkUpdateEditor.jsx",
          "SmartBillMatcher.jsx",
          "BillDetailModal.jsx",
          "BulkUpdateConfirmModal.jsx",
          "BillEnvelopeFundingInfo.jsx",
          "CashFlowSummary.jsx",
          "CreateEnvelopeModal.jsx",
          "DeleteEnvelopeModal.jsx",
          "EditEnvelopeModal.jsx",
          "PaydayPrediction.jsx",
          "SmartEnvelopeSuggestions.jsx",
          "EnvelopeBasicFields.jsx",
          "EnvelopeBudgetFields.jsx",
          "EnvelopeHeader.jsx",
          "EnvelopeHistoryModal.jsx",
          "EnvelopeModalHeader.jsx",
          "UnassignedCashEnvelope.jsx",
          "AllocationPreview.jsx",
          "PaycheckForm.jsx",
          "PaycheckHistory.jsx",
          "AllocationModeSelector.jsx",
          "BillConnectionSelector.jsx",
          "EnvelopeTypeSelector.jsx",
          "FrequencySelector.jsx",
          "SuggestionCard.jsx",
          "SuggestionSettings.jsx",
          "SuggestionsList.jsx",
          "ChartContainer.jsx",
          "AccountBalanceOverview.jsx",
          "RecentTransactionsWidget.jsx",
          "ReconcileTransactionModal.jsx",
          "DebtStrategies.jsx",
          "DebtDetailModal.jsx",
          "DebtFormFields.jsx",
          "DebtModalHeader.jsx",
          "UpcomingPaymentsModal.jsx",
          "DebtFilters.jsx",
          "DebtList.jsx",
          "DebtSummaryCards.jsx",
          "DebtSummaryWidget.jsx",
          "PaymentImpactTable.jsx",
          "StrategyCard.jsx",
          "BugReportButton.jsx",
          "BudgetHistoryViewer.jsx",
          "IntegrityStatusIndicator.jsx",
          "ObjectHistoryViewer.jsx",
          "ChangeDetails.jsx",
          "HistoryControls.jsx",
          "HistoryHeader.jsx",
          "HistoryList.jsx",
          "HistoryStatistics.jsx",
          "IntegrityWarning.jsx",
          "UnassignedCashModal.jsx",
          "EmptyStateHints.jsx",
          "OnboardingProgress.jsx",
          "AddEditGoalModal.jsx",
          "DistributeModal.jsx",
          "SavingsGoalCard.jsx",
          "SavingsGoals.jsx",
          "SavingsSummaryCard.jsx",
          "LocalDataSecurityWarning.jsx",
          "LockScreen.jsx",
          "EnvelopeIntegrityChecker.jsx",
          "SettingsDashboard.jsx",
          "TransactionArchiving.jsx",
          "ArchivingActionButtons.jsx",
          "ArchivingConfiguration.jsx",
          "ArchivingHeader.jsx",
          "ArchivingPreviewResults.jsx",
          "ArchivingProgress.jsx",
          "ArchivingResult.jsx",
          "ArchivingStatusOverview.jsx",
          "SettingsLayout.jsx",
          "ResetConfirmModal.jsx",
          "DataManagementSection.jsx",
          "GeneralSettingsSection.jsx",
          "SecuritySettingsSection.jsx",
          "ActivityBanner.jsx",
          "ConflictResolutionModal.jsx",
          "ManualSyncControls.jsx",
          "TransactionFilters.jsx",
          "TransactionFormFields.jsx",
          "TransactionModalHeader.jsx",
          "TransactionSummary.jsx",
          "TransactionSummaryCards.jsx",
          "DeleteConfirmation.jsx",
          "useBillManagerUI.js",
          "useBudgetHistoryViewer.js",
          "useSettingsDashboard.js"
        ],
        "action": "Review and fix no-restricted-imports violations"
      },
      {
        "task": "Fix max-statements warnings",
        "warningsAffected": 28,
        "files": [
          "EnvelopeGrid.jsx",
          "MainLayout.jsx",
          "LockScreen.jsx",
          "useAnalyticsIntegration.js",
          "useReportExporter.js",
          "useAuthFlow.js",
          "useUserSetup.js",
          "useBillManager.js",
          "useBillOperations.js",
          "mutations.js",
          "paycheckMutations.js",
          "useBugReport.js",
          "useBugReportV2.js",
          "useConnectionManager.js",
          "usePaycheckOperations.js",
          "useTransactionImport.js",
          "useTransactionLedger.js",
          "useTransactionQuery.js",
          "main.jsx",
          "pageDetectionService.js",
          "editLockService.js",
          "billCalculations.js",
          "envelopeFormUtils.js",
          "envelopeIntegrityChecker.js",
          "billDiscovery.js",
          "transactionArchiving.js",
          "savingsFormUtils.js"
        ],
        "action": "Split long function into smaller functions with single responsibilities"
      },
      {
        "task": "Fix max-params warnings",
        "warningsAffected": 5,
        "files": [
          "useBillDetail.js",
          "useDebtDetailModal.js",
          "useTransactionFilters.js",
          "envelopeCalculations.js",
          "suggestionUtils.js"
        ],
        "action": "Reduce function parameters - use object parameters or split function"
      }
    ],
    "lowPriority": [
      {
        "task": "Fix no-undef warnings",
        "warningsAffected": 3,
        "files": [
          "CategoryNavigationTabs.jsx"
        ],
        "action": "Review and fix no-undef violations"
      },
      {
        "task": "Fix max-depth warnings",
        "warningsAffected": 1,
        "files": [
          "mutations.js"
        ],
        "action": "Reduce nesting depth - use early returns or extract nested logic"
      }
    ]
  },
  "commands": {
    "checkWarnings": "npm run lint",
    "countWarnings": "npm run lint 2>&1 | grep -c \"warning\"",
    "checkSpecificFile": "npx eslint src/path/to/file.js"
  },
  "monitoring": {
    "target": "≤ 17 warnings",
    "reviewFrequency": "After significant changes or weekly",
    "autoCheck": "Automated via GitHub Actions"
  }
}
